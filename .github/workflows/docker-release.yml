name: Build and Push Docker Image

on:
  push:
    branches:
      - "release" # 当推送到 release 分支时触发
    tags:
      - "*" # 当推送任何标签时触发

jobs:
  build:
    runs-on: ubuntu-latest # 使用最新版本的 Ubuntu 进行构建

    steps:
      - name: Checkout # 检出代码到工作目录
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 检出完整的 Git 历史记录

      - name: Install Node.js # 安装 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.19.1

      - name: Setup pnpm # 安装 Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies and Build SDK # 安装依赖、build SDK
        run: pnpm run bootstrap
        working-directory: ./

      - name: Install nc-gui # 安装 nc-gui
        run: |
          pnpm install --ignore-scripts --no-frozen-lockfile
          pnpm run build:copy
        working-directory: ./packages/nc-gui

      - name: Build nocodb and docker files # 构建 nocodb 和 docker 文件
        run: |
          pnpm install --ignore-scripts --no-frozen-lockfile
          pnpm run docker:build
        working-directory: ./packages/nocodb

      - name: Set up QEMU # 设置 QEMU 以支持多架构构建
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers # 缓存 Docker 构建层，以加快构建速度
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub # 登录 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine Docker Tag # 确定 Docker 标签
        id: tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build and push # 构建并推送 Docker 镜像
        uses: docker/build-push-action@v3
        with:
          context: ./packages
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          push: true
          tags: |
            huang123913/smartdata-release:${{ env.TAG }}

      - name: Move cache # 移动缓存文件以更新缓存
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
